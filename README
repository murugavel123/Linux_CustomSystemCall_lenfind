# sys_lenfind (System Call 335)

## Table of Contents
- [Overview](#overview)
- [Features](#features)
- [Requirements](#requirements)
- [Installation](#installation)
- [Usage](#usage)
- [Testing](#testing)
- [Contributing](#contributing)
- [License](#license)
- [Contact](#contact)

---

## Overview
The **`sys_lenfind`** is a custom Linux system call with the number **335** that takes a string as input and returns the length of the string. This system call enhances kernel functionality by enabling string operations directly within the kernel space, showcasing our ability to extend the Linux kernel.

---

## Features
- Accepts a string as input and returns its length.
- Can be invoked from user-space programs.
- Integrates directly into the Linux kernel.
- Efficient interaction between user-space and kernel-space.

---

## Requirements
- Linux system with kernel source code access.
- Basic understanding of Linux kernel development.
- GCC compiler for building the kernel.

---

## Installation

### Step 1: Kernel Source Code
1. Download and extract the Linux kernel source code:
   ```bash
   sudo apt-get install linux-source
   cd /usr/src/linux-source-<version>
   ```
   
### Step 2: Modify the System Call Table
1. Open the system call table file (`syscall_64.tbl`) located in:
   ```bash
   arch/x86/entry/syscalls/syscall_64.tbl
   ```
2. Add the following entry to define your new system call:
   ```bash
   335     common  sys_lenfind    sys_lenfind
   ```

### Step 3: Implement the System Call
1. Add the implementation of `sys_lenfind` in the appropriate file:
   ```bash
   vim kernel/sys.c
   ```
2. Add the following function:
   ```c
   asmlinkage long sys_lenfind(const char __user *str) {
       return strlen(str);  // Kernel's built-in string length function
   }
   ```

### Step 4: Recompile the Kernel
1. Configure the kernel:
   ```bash
   make menuconfig
   ```
2. Compile the kernel:
   ```bash
   make -j$(nproc)
   ```
3. Install the new kernel:
   ```bash
   sudo make modules_install
   sudo make install
   sudo reboot
   ```

---

## Usage

1. Write a user-space program to invoke the new system call:
   ```c
   #include <stdio.h>
   #include <unistd.h>
   #include <sys/syscall.h>

   #define __NR_lenfind 335

   int main() {
       char input[] = "Hello, World!";
       long result = syscall(__NR_lenfind, input);
       printf("Length of the string: %ld\n", result);
       return 0;
   }
   ```

2. Compile and run the program:
   ```bash
   gcc -o lenfind_test lenfind_test.c
   ./lenfind_test
   ```

---

## Testing

1. To test the system call, pass different strings to the program and check if the correct length is returned.
2. Verify the return values for empty strings and special characters.

---

## Contributing
1. Fork the repository.
2. Create a new branch (`git checkout -b feature/new-feature`).
3. Commit your changes (`git commit -am 'Add new feature'`).
4. Push to the branch (`git push origin feature/new-feature`).
5. Open a Pull Request.

---

## License
This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

---

## Contact
For any questions or further support, please contact:

- **Developer Names**: Kavin Murugavel Sengathirsoorian Vishal

---

